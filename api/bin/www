#!/usr/bin/env node

//
// Código original gerado pela ferramenta express-generator.
// Modificado para localização (inglês para português).
//

var app = require('../app')
var dbConnect = require('../db/connect')
var debug = require('debug')('api:server')
var http = require('http')

var port = normalizePort(process.env.PORT || '9000')
app.set('port', port)

var server = http.createServer(app)

// Conecta ao banco de dados e então inicializa o
// servidor HTTP.
dbConnect().then(() => {
  debug('Banco de dados conectado!')
  server.listen(port);
}).catch((err) => {
  console.error(err)
  process.exit(1)
})

server.on('error', onError);
server.on('listening', onListening);

function normalizePort(val) {
  var port = parseInt(val, 10);

  if (isNaN(port)) {
    return val;
  }

  if (port >= 0) {
    return port;
  }

  return false;
}

function onError(error) {
  if (error.syscall !== 'listen') {
    throw error;
  }

  var bind = typeof port === 'string'
    ? 'Pipe ' + port
    : 'Porta ' + port;

  switch (error.code) {
    case 'EACCES':
      console.error(bind + ' necessita de privelégios elevados');
      process.exit(1);
    case 'EADDRINUSE':
      console.error(bind + ' já está em uso');
      process.exit(1);
    default:
      throw error;
  }
}

function onListening() {
  var addr = server.address();
  var bind = typeof addr === 'string'
    ? 'pipe ' + addr
    : 'port ' + addr.port;
  debug('Listening on ' + bind);
}
